#!/bin/bash

# push to github

# if number of arguments is 0, push all changes
# if number is passed as argument, add the files [number]-* and push with default message 'Add Task [number] IN [parent_folder]'
# if char is passed as argument, add the files [char].c* and push with default message 'Add Problem [char]'
# if '-m' is passed as argument, push with the specified message

mess=""
commit_message=-1
echo $#

# Make Array of all arguments without -m and its value if exists
args=()
for ((i=1; i<=$#; i++)); do
    echo "${!{i-1}}" "${!i}"
    if [ "${!i}" != "-m" ] && [ "$((i-1))" != "-m" ]; then
        args+=("${!i}")
    else
        if [ $((i+1)) -le $# ]; then
            commit_message=${!i+1}
        else
            echo "No commit message provided"
            exit 1
        fi
    fi
done

for ((i=0; i<=${#args[@]}; i++)); do
    echo ${args[i]}
done

# if no element in the args array add all files and push with default message
if [ ${#args[@]} -eq 0 ]; then
    git add .
    mess="Add Files"
fi
# if number is passed as argument, add the files [number]-* and push with default message 'Add Task [number] IN [parent_folder]'
# if char is passed as argument, add the files [char].c* and push with default message 'Add Problem [char]'
if [ ${#args[@]} -eq 1 ]; then
    # get the name of the parent folder to make the mess as 'Add Task [number] IN [parent_folder]'
    parent_folder=$(basename "$(pwd)")
    # remove the chars until first '-' char and don't remove any chars if there is no '-'
    parent_folder=${parent_folder#*-}

    if [[ ${args[0]} =~ ^[0-9]+$ ]]; then
        git add $(( ${args[0]} ))-*

        # add main_files/ and dump/ folder if exists
        if [ -d "main_files" ]; then
            git add main_files/
        fi
        if [ -d "dump" ]; then
            git add dump/
        fi

        mess="Add Task ${args[0]} IN $parent_folder"
    else
        git add ${args[0]}.c*
        mess="Add Problem ${args[0]} IN $parent_folder"
    fi
fi

# if commit message is provided, use it
if [ "$commit_message" -ne -1 ]; then
        mess="${args[$commit_message_index]}"
fi

# ========================================

echo "AT END $mess"
# git commit -m "$mess"
# git push
